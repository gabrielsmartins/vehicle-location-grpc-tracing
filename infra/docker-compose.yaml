version: "3.8"
services:
    # And put them in an OTEL collector pipeline...
  otel-collector:
    image: otel/opentelemetry-collector:0.72.0
    command: [ "--config=/etc/otel-collector.yaml" ]
    ports:
      - "31888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "4318:4318"   # OTLP http receiver
      - "55679:55679" # zpages extension
    volumes:
      - ./otel-collector.yaml:/etc/otel-collector.yaml

  # To eventually offload to Tempo...
  tempo:
    image: grafana/tempo:2.2.4
    command: [ "-config.file=/etc/tempo.yaml" ]
    volumes:
      - ./tempo.yaml:/etc/tempo.yaml
      - ./tempo-data:/tmp/tempo
    ports:
      - "14268"  # jaeger ingest
      - "3200"   # tempo
      - "4317"  # otlp grpc
      - "4318"  # otlp http
      - "9411"   # zipkin

  prometheus:
    image: prom/prometheus:v2.47.2
    command:
      - --config.file=/etc/prometheus.yaml
      - --web.enable-remote-write-receiver
      - --enable-feature=exemplar-storage
    volumes:
      - ./prometheus.yaml:/etc/prometheus.yaml
    ports:
      - "9090:9090"

  jaeger-server:
    image: jaegertracing/all-in-one:1.18.1
    container_name: jaeger-server
    ports:
      - "5775:5775/udp"
      - "6831:6831/udp"
      - "5778:5778"
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
      - "9411:9411"    

  grafana:
    image: grafana/grafana:10.2.0
    volumes:
      - ./grafana-datasources.yaml:/etc/grafana/provisioning/datasources/datasources.yaml
    environment:
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_DISABLE_LOGIN_FORM=true
      - GF_FEATURE_TOGGLES_ENABLE=traceqlEditor
    ports:
      - "3000:3000"
    depends_on:
      - otel-collector
      - tempo
      - prometheus
      - jaeger-server  
      
  elasticsearch:
    image: elasticsearch:8.10.4
    container_name: elasticsearch
    environment:
      - node.name=es-node
      - cluster.name=es-cluster
      - discovery.type=single-node
      - xpack.security.enabled=false
    ports:
      - "9200:9200"
      - "9300:9300"
    networks:
      - elastic  

  kibana:
    image: kibana:8.10.4
    container_name: kibana
    restart: "unless-stopped"
    environment:
      - "ELASTICSEARCH_URL=http://elasticsearch:9200"
    ports:
      - "5601:5601" 
    networks:
      - elastic
    depends_on:
      - elasticsearch    

networks:
  elastic:    